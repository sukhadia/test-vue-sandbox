const data = {
  data: {
    workflows: [
      {
        id: "Uuid(17de1f79-11af-48dd-9950-9092f8083a59)",
        messages: [
          {
            id:
              "MessageID { node_id: NodeID(17564329866954636033), time: 1633973204221, counter: 1 }",
            msg:
              '[("id", Bytes([1, 124, 112, 100, 116, 253, 0, 1, 243, 193, 8, 244, 69, 157, 123, 1])), ("workflow_id", Bytes([23, 222, 31, 121, 17, 175, 72, 221, 153, 80, 144, 146, 248, 8, 58, 89])), ("type_id", Bytes([186, 56, 251, 43, 111, 242, 72, 57, 170, 213, 3, 171, 42, 155, 114, 179]))]'
          },
          {
            id:
              "MessageID { node_id: NodeID(17564329866954636033), time: 1633973204221, counter: 2 }",
            msg:
              '[("id", Bytes([1, 124, 112, 100, 116, 253, 0, 2, 243, 193, 8, 244, 69, 157, 123, 1])), ("workflow_id", Bytes([23, 222, 31, 121, 17, 175, 72, 221, 153, 80, 144, 146, 248, 8, 58, 89])), ("user_id", Bytes([159, 104, 231, 147, 151, 252, 64, 240, 185, 68, 83, 115, 28, 187, 76, 73])), ("node_ids", Array([Bytes([243, 193, 8, 244, 69, 157, 123, 1])]))]'
          },
          {
            id:
              "MessageID { node_id: NodeID(17564329866954636033), time: 1633973204223, counter: 3 }",
            msg:
              '[("id", Bytes([1, 124, 112, 100, 116, 255, 0, 3, 243, 193, 8, 244, 69, 157, 123, 1])), ("workflow_id", Bytes([23, 222, 31, 121, 17, 175, 72, 221, 153, 80, 144, 146, 248, 8, 58, 89])), ("scope", Enum(0, "SYSTEM")), ("key", String("description")), ("value", String("test description!!!"))]'
          },
          {
            id:
              "MessageID { node_id: NodeID(17564329866954636033), time: 1633973204223, counter: 4 }",
            msg:
              '[("id", Bytes([1, 124, 112, 100, 116, 255, 0, 4, 243, 193, 8, 244, 69, 157, 123, 1])), ("workflow_id", Bytes([23, 222, 31, 121, 17, 175, 72, 221, 153, 80, 144, 146, 248, 8, 58, 89])), ("schema_id", Bytes([57, 54, 99, 100, 48, 97, 55, 50, 45, 52, 57, 51, 48, 45, 52, 101, 99, 100, 45, 57, 99, 56, 102, 45, 97, 100, 55, 98, 54, 52, 52, 50, 98, 98, 97, 99])), ("name", String("test clear")), ("number", Int(3))]'
          }
        ]
      },
      {
        id: "Uuid(66e2174e-90c8-415b-b90e-f1544d1957f8)",
        messages: [
          {
            id:
              "MessageID { node_id: NodeID(7833070725282548283), time: 1633982501460, counter: 5 }",
            msg:
              '[("id", Bytes([1, 124, 112, 242, 82, 84, 0, 5, 108, 180, 168, 82, 192, 250, 74, 59])), ("workflow_id", Bytes([102, 226, 23, 78, 144, 200, 65, 91, 185, 14, 241, 84, 77, 25, 87, 248])), ("type_id", Bytes([161, 239, 179, 242, 10, 143, 74, 135, 175, 21, 19, 47, 25, 108, 252, 144]))]'
          },
          {
            id:
              "MessageID { node_id: NodeID(7833070725282548283), time: 1633982501460, counter: 6 }",
            msg:
              '[("id", Bytes([1, 124, 112, 242, 82, 84, 0, 6, 108, 180, 168, 82, 192, 250, 74, 59])), ("workflow_id", Bytes([102, 226, 23, 78, 144, 200, 65, 91, 185, 14, 241, 84, 77, 25, 87, 248])), ("user_id", Bytes([159, 104, 231, 147, 151, 252, 64, 240, 185, 68, 83, 115, 28, 187, 76, 73])), ("node_ids", Array([Bytes([108, 180, 168, 82, 192, 250, 74, 59])]))]'
          },
          {
            id:
              "MessageID { node_id: NodeID(7833070725282548283), time: 1633982501460, counter: 7 }",
            msg:
              '[("id", Bytes([1, 124, 112, 242, 82, 84, 0, 7, 108, 180, 168, 82, 192, 250, 74, 59])), ("workflow_id", Bytes([102, 226, 23, 78, 144, 200, 65, 91, 185, 14, 241, 84, 77, 25, 87, 248])), ("scope", Enum(0, "SYSTEM")), ("key", String("description")), ("value", String("test description!!!"))]'
          },
          {
            id:
              "MessageID { node_id: NodeID(7833070725282548283), time: 1633982501461, counter: 8 }",
            msg:
              '[("id", Bytes([1, 124, 112, 242, 82, 85, 0, 8, 108, 180, 168, 82, 192, 250, 74, 59])), ("workflow_id", Bytes([102, 226, 23, 78, 144, 200, 65, 91, 185, 14, 241, 84, 77, 25, 87, 248])), ("schema_id", Bytes([57, 54, 99, 100, 48, 97, 55, 50, 45, 52, 57, 51, 48, 45, 52, 101, 99, 100, 45, 57, 99, 56, 102, 45, 97, 100, 55, 98, 54, 52, 52, 50, 98, 98, 97, 99])), ("name", String("test clear")), ("number", Int(3))]'
          }
        ]
      }
    ]
  }
};

export const fetchMessages = () => {
  return new Promise((resolve, reject) => {
    setTimeout(() => resolve(data), 2000);
  });
};
